{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.ts","webpack:///./src/injector.ts","webpack:///external \"tslib\"","webpack:///./src/config.ts","webpack:///./src/reflect.ts","webpack:///./src/index.ts","webpack:///(webpack)/buildin/global.js","webpack:///external \"reflect-metadata\"","webpack:///./src/inject.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export const DESIGN_PARAM_TYPES = \"design:paramtypes\";\nexport const DESIGN_TYPE = \"design:type\";\nexport const DESIGN_RETURN_TYPE = \"design:returntype\";\nexport const INJECTED_PROPERTIES = Symbol(\"injected properties\");\nexport const INJECTED_ARGUMENTS = Symbol(\"injected arguments\");\nexport const PROPERTIES_BOUND = Symbol(\"properties bound\");\nexport const INJECTED_CLASS_TAG = Symbol(\"injected class tag\");\nexport const PROPERTIES_BINDER = Symbol(\"properties binder\");\n","import { defaultConfigOptions, IConfigOptions } from \"./config\";\nimport { INJECTED_CLASS_TAG, INJECTED_PROPERTIES, PROPERTIES_BOUND } from \"./constants\";\nimport reflect from \"./reflect\";\n\n// tslint:disable-next-line\nexport type RegisterType = Function;\n\nconst INJECT_ITEMS = new Map<any, any>();\n\nexport class Injector {\n\n    /**\n     * Register a service for injection.\n     * @param type The service type to be register\n     * @param value The associated value can be a factory function.\n     *\n     * @example\n     * Injector.register(String, \"default value\");\n     * Injector.register(Number, () => Math.random());\n     * class Demo{}\n     * Injector.register(Demo, new Demo());\n     */\n    public static register(type: RegisterType, value: any): void {\n        if (typeof type !== \"function\") { throw new TypeError(`The 'type' parameter must be a function type.`); }\n        const factory = typeof value === \"function\" ? value : () => value;\n        INJECT_ITEMS.set(type, factory);\n    }\n\n    /**\n     * Get the value corresponding to a specific type, the type must be registered in advance.\n     * @param type The type registered.\n     * @param args The parameters required by the factory function.\n     *\n     * @example\n     * class Demo{}\n     * Injector.register(Demo, new Demo());\n     * const instance = ServiceManager.get(Demo);\n     */\n    public static get<T = any>(type: RegisterType, ...args: any[]): T {\n        if (!INJECT_ITEMS.has(type)) {\n            throw new Error(`Missing type ${type.name} injection`);\n        }\n        const factory = INJECT_ITEMS.get(type);\n        const prototype = factory.prototype;\n        if (prototype && reflect.hasMetadata(INJECTED_CLASS_TAG, prototype)) {\n            return new factory(...args);\n        }\n        return factory.apply(null, args);\n    }\n\n    /**\n     * Set global injection options\n     * @param options injection options\n     */\n    public static config(options: IConfigOptions) {\n        Object.assign(defaultConfigOptions, options);\n    }\n\n    /**\n     * Binding injected property members\n     * @param thisArg instance object\n     * @param forcibly Whether to force the setting\n     */\n    public static bindProperties(thisArg: any, forcibly: boolean = false) {\n        if (thisArg[PROPERTIES_BOUND] && !forcibly) { return; }\n        const properties: any[] = reflect.getMetadata(INJECTED_PROPERTIES, thisArg);\n        if (!properties) { return; }\n        properties.forEach(({ name, type, args }) => thisArg[name] = Injector.get(type, ...args));\n        thisArg[PROPERTIES_BOUND] = true;\n    }\n}\n","module.exports = require(\"tslib\");","export interface IConfigOptions {\n    /**\n     * The method name to bind properties, default use onLoad or attached methods.\n     * @default 'onLoad' and 'attached'.\n     */\n    propertiesBinder?: string;\n    /**\n     * Whether to bind properties in the constructor.\n     * @default true\n     */\n    bindPropertiesInConstructor?: boolean;\n}\n\nexport const defaultConfigOptions = { bindPropertiesInConstructor: true };\n","declare const global: any;\nimport \"reflect-metadata\";\n\nfunction isValid(obj: any) {\n    return typeof obj === \"object\" && typeof obj.getMetadata === \"function\";\n}\n\nconst reflect: typeof Reflect = (function() {\n    if (isValid(Reflect)) {\n        return Reflect;\n    } else if (isValid(global.Reflect)) {\n        return global.Reflect;\n    } else if (isValid(global.global && global.global.Reflect)) {\n        return global.global.Reflect;\n    }\n    return {};\n}());\nexport default reflect;\n","export { Injector } from \"./injector\";\nexport { inject, injectable, injectFor, injectSelf } from \"./inject\";\nexport { PROPERTIES_BINDER } from \"./constants\";\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = require(\"reflect-metadata\");","\nimport { defaultConfigOptions, IConfigOptions } from \"./config\";\nimport {\n    DESIGN_PARAM_TYPES, DESIGN_TYPE, INJECTED_ARGUMENTS,\n    INJECTED_CLASS_TAG, INJECTED_PROPERTIES, PROPERTIES_BINDER,\n} from \"./constants\";\nimport { Injector, RegisterType } from \"./injector\";\nimport reflect from \"./reflect\";\n\ninterface IInjectOptions {\n    /**\n     * The parameters required by the factory function.\n     */\n    args?: any[];\n    /**\n     * The type to register\n     */\n    type?: RegisterType;\n}\n\nfunction defineData(metadataKey: any, metadataValue: any, target: object) {\n    let arr = reflect.getMetadata(metadataKey, target);\n    arr = arr ? arr.slice() : [];\n    arr.push(metadataValue);\n    reflect.defineMetadata(metadataKey, arr, target);\n}\n\nfunction bindProperties(ctor: new (...args: any) => void, method: string) {\n    const original = ctor.prototype[method];\n    if (typeof original === \"function\" || original === undefined) {\n        ctor.prototype[method] = function(...methodArgs: any) {\n            Injector.bindProperties(ctor.prototype);\n            return original && original.apply(this, methodArgs);\n        };\n    }\n}\n\n/**\n * Tag constructor arguments or properties to inject.\n * @param args 函数调用用到的参数\n */\nexport function inject(options?: IInjectOptions | RegisterType) {\n    const opts = typeof options === \"function\" ? { type: options } : Object.assign({}, options);\n    return function(target: any, name: string, index?: number) {\n        let { type, args } = opts as IInjectOptions;\n        args = Array.isArray(args) ? args : [];\n        const ctor = target.constructor;\n        if (index === undefined && typeof name === \"string\") {\n            type = type || reflect.getMetadata(DESIGN_TYPE, target, name);\n            if (typeof type !== \"function\") {\n                throw new Error(`Unknown property type of [${ctor.name}|${name}].`);\n            }\n            defineData(INJECTED_PROPERTIES, { type, args, name }, target);\n        } else if (typeof index === \"number\") {\n            if (typeof type !== \"function\") {\n                const types = reflect.getMetadata(DESIGN_PARAM_TYPES, target, name);\n                type = types[index];\n                if (typeof type !== \"function\") {\n                    throw new Error(`Unknown argument type of [${ctor.name}|${index}].`);\n                }\n            }\n            defineData(INJECTED_ARGUMENTS, { type, args, name, index }, target);\n        }\n    };\n}\n\n/**\n * Automatically inject properties or constructor arguments for the current class\n */\nexport function injectable(options?: IConfigOptions) {\n    const opts = Object.assign({}, defaultConfigOptions, options);\n    let { bindPropertiesInConstructor } = opts;\n    const propertiesBinder = opts.propertiesBinder;\n    return function(ctor: new (...args: any) => any): any {\n        reflect.defineMetadata(INJECTED_CLASS_TAG, true, ctor.prototype);\n        const hasProperties = reflect.hasMetadata(INJECTED_PROPERTIES, ctor.prototype);\n        if (hasProperties) {\n            if (propertiesBinder === \"constructor\") {\n                bindPropertiesInConstructor = true;\n            } else if (typeof propertiesBinder === \"string\") {\n                bindProperties(ctor, propertiesBinder);\n                bindPropertiesInConstructor = false;\n            } else if (typeof ctor.prototype[PROPERTIES_BINDER] === \"string\") {\n                bindProperties(ctor, ctor.prototype[PROPERTIES_BINDER]);\n                bindPropertiesInConstructor = false;\n            } else if (!bindPropertiesInConstructor) {\n                bindProperties(ctor, \"onLoad\");\n                bindProperties(ctor, \"attached\");\n                bindPropertiesInConstructor = false;\n            }\n        }\n        const hasArguments = reflect.hasMetadata(INJECTED_ARGUMENTS, ctor);\n        if (hasProperties && bindPropertiesInConstructor || hasArguments) {\n            return class extends ctor {\n                constructor(...newArgs: any) {\n                    // tslint:disable-next-line\n                    bindPropertiesInConstructor && Injector.bindProperties(ctor.prototype);\n                    const injectedArgs: any[] = reflect.getMetadata(INJECTED_ARGUMENTS, ctor) || [];\n                    injectedArgs.forEach(({ index, args, type }) => newArgs[index] = Injector.get(type, ...args));\n                    super(...newArgs);\n                }\n            };\n        }\n    };\n}\n\n/**\n * Register the current class as a service of the specified type\n * @param type The type to register\n */\nexport function injectFor(type?: RegisterType) {\n    return function(ctor: new (...args: any) => any) {\n        Injector.register(type || ctor, function(...ctorArguments: any[]) {\n            return new ctor(...ctorArguments);\n        });\n    };\n}\n\n/**\n * Register the current class as a service of the self type\n */\nexport function injectSelf() {\n    return injectFor();\n}\n"],"sourceRoot":""}